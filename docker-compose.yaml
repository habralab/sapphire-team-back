version: "3"
services:
  database:
    image: postgres:16.0-bookworm
    secrets:
      - postgresql_password
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgresql_password
    volumes:
      - ${DATABASE_DIR:-./database_data}:/var/lib/postgresql/data
    deploy:
      replicas: 1

  redis:
    image: redis:7.2.1-bookworm
    volumes:
      - ${REDIS_DIR:-./redis_data}:/data
    deploy:
      replicas: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    user: 0:0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ${BROKER_DIR:-./broker_data}/zookeeper/data:/var/lib/zookeeper/data
      - ${BROKER_DIR:-./broker_data}/zookeeper/log:/var/lib/zookeeper/log
    deploy:
      replicas: 1

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    user: 0:0
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ${BROKER_DIR:-./broker_data}/kafka/data:/var/lib/kafka/data
    deploy:
      replicas: 1

  users:
    image: ${SAPPHIRE_IMAGE:-sapphire}
    depends_on:
      - redis
      - database
      - kafka
    environment:
      DB_DSN: ${USERS_DB_DSN:-sqlite+aiosqlite:///users.db}
      ROOT_URL: ${USERS_ROOT_URL:-http://localhost:3000}
      ROOT_PATH: ${USERS_ROOT_PATH}
      ALLOWED_ORIGINS: ${USERS_ALLOWED_ORIGINS:-["http://localhost:3050"]}
    secrets:
      - habr_oauth2_client_id
      - habr_oauth2_client_secret
    ports:
      - target: 8000
        published: ${USERS_PORT:-3000}
        mode: host
    command: ["users", "run"]
    deploy:
      replicas: 1

  projects:
    image: ${SAPPHIRE_IMAGE:-sapphire}
    depends_on:
      - redis
      - database
      - kafka
    environment:
      DB_DSN: ${PROJECTS_DB_DSN:-sqlite+aiosqlite:///projects.db}
      ROOT_URL: ${PROJECTS_ROOT_URL:-http://localhost:3020}
      ROOT_PATH: ${PROJECTS_ROOT_PATH}
      ALLOWED_ORIGINS: ${PROJECTS_ALLOWED_ORIGINS:-["http://localhost:3050"]}
    ports:
      - target: 8000
        published: ${PROJECTS_PORT:-3020}
        mode: host
    command: ["projects", "run"]
    deploy:
      replicas: 1

  notifications:
    image: ${SAPPHIRE_IMAGE:-sapphire}
    depends_on:
      - redis
      - database
      - kafka
    environment:
      DB_DSN: ${NOTIFICATIONS_DB_DSN:-sqlite+aiosqlite:///notifications.db}
      ROOT_URL: ${NOTIFICATIONS_ROOT_URL:-http://localhost:3030}
      ROOT_PATH: ${NOTIFICATIONS_ROOT_PATH}
      ALLOWED_ORIGINS: ${NOTIFICATIONS_ALLOWED_ORIGINS:-["http://localhost:3050"]}
      CONSUMER_SERVERS: ${NOTIFICATIONS_CONSUMER_SERVERS:-["kafka:9091"]}
      TOPICS: ${NOTIFICATIONS_TOPICS:-["notifications"]}
    ports:
      - target: 8000
        published: ${NOTIFICATIONS_PORT:-3030}
        mode: host
    command: ["notifications", "run"]
    deploy:
      replicas: 1

  swagger:
    image: swaggerapi/swagger-ui
    depends_on:
      - projects
      - users
    environment:
      URLS: >
        [
          {"url": "${USERS_ROOT_URL:-http://localhost:3000}${USERS_ROOT_PATH}/openapi.json", "name": "Users"},
          {"url": "${PROJECTS_ROOT_URL:-http://localhost:3020}${PROJECTS_ROOT_PATH}/openapi.json", "name": "Projects"},
          {"url": "${NOTIFICATIONS_ROOT_URL:-http://localhost:3030}${NOTIFICATIONS_ROOT_PATH}/openapi.json", "name": "Notifications"}
        ]
    ports:
      - target: 8080
        published: ${SWAGGER_PORT:-3050}
        mode: host
    deploy:
      replicas: 1

secrets:
  habr_oauth2_client_id:
    external: true
    name: ${HABR_OAUTH2_CLIENT_ID_NAME:-habr_oauth2_client_id}
  habr_oauth2_client_secret:
    external: true
    name: ${HABR_OAUTH2_CLIENT_SECRET_NAME:-habr_oauth2_client_secret}
  postgresql_password:
    external: true
    name: ${POSTGRESQL_PASSWORD_NAME:-postgresql_password}
  jwt_access_token_private_key:
    external: true
    name: ${JWT_ACCESS_TOKEN_PRIVATE_KEY_NAME:-jwt_access_token_private_key}
  jwt_access_token_public_key:
    external: true
    name: ${JWT_ACCESS_TOKEN_PUBLIC_KEY_NAME:-jwt_access_token_public_key}
  jwt_refresh_token_private_key:
    external: true
    name: ${JWT_REFRESH_TOKEN_PRIVATE_KEY_NAME:-jwt_refresh_token_private_key}
  jwt_refresh_token_public_key:
    external: true
    name: ${JWT_REFRESH_TOKEN_PUBLIC_KEY_NAME:-jwt_refresh_token_public_key}
